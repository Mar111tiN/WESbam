from subprocess import Popen, PIPE, DEVNULL
from io import StringIO
import pandas as pd
import os


ansii_colors = {
          'magenta': '[1;35;2m',
          'green': '[1;9;2m',
          'red': '[1;31;1m',
          'cyan': '[1;36;1m',
          'gray': '[1;30;1m',
          'black': '[0m'
          }

colors = {
        'process': ansii_colors['green'],
        'time': ansii_colors['magenta'],
        'normal': ansii_colors['gray'],
        'warning': ansii_colors['red'],
        'success': ansii_colors['cyan']
        }


def show_output(text, color='normal', multi=False, time=False):
    '''
    get colored output to the terminal
    '''
    time = f"\033{colors['time']}{dt.now().strftime('%H:%M:%S')}\033[0m : " if time else ''
    proc = f"\033{colors['process']}Process {os.getpid()}\033[0m : " if multi else ''
    text = f"\033{colors[color]}{text}\033[0m"
    print(time + proc + text)


def show_command(command, config, multi=True):
    '''
    prints the command line if debugging is active
    '''

    if config['debug_mode']:
        proc = f"\033[92mProcess {os.getpid()}\033[0m : " if multi else ""
        if len(command) > 1:
            command = f"\033[1m$ {' '.join(command)}\033[0m"

        print(proc + command)
    return


def get_chrom_list(config):
    '''
    returns a list of all valid chromosomes determined by build version
    '''

    def get_chrom(c, use_chr=True):
        if c > 21:
            if c == 22:
                chrom = "X"
            if c == 23:
                chrom = "Y"
        else:
            chrom = c + 1
        return f"chr{chrom}" if use_chr else str(chrom)

    # switch for use of "chr"-prefix
    is_hg38 = (config['ref']['build'] == 'hg38')

    chrom_list = [get_chrom(chrom, is_hg38) for chrom in range(23)]  ### for including Y use 24!!!
    return chrom_list